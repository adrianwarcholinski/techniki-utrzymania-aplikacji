@startuml

title MOR.19 Dodaj nowy model broni
autoactivate on
actor Employee
boundary AddWeaponModelForm
boundary AddWeaponModelForm
participant WeaponCategoryEndpoint
participant WeaponModelEndpoint
participant WeaponModelManager
participant WeaponCategoryManager
control WeaponModelFacadeReadCommitted as WeaponModelFacade
control WeaponCategoryFacadeReadCommitted as WeaponCategoryFacade
entity WeaponModelEntity

alt weapon model with such name does not exist
autonumber
    Employee -> AddWeaponModelForm: 'add' button clicked
        AddWeaponModelForm -> WeaponCategoryEndpoint: getAllWeaponCategories()
            WeaponCategoryEndpoint -> WeaponCategoryManager: getAllWeaponCategories()
                group RO, read committed
                    WeaponCategoryManager -> WeaponCategoryFacade: findAll()
                    return weaponCategoryEntities
                end
                WeaponCategoryEndpoint -> WeaponCategoryEndpoint: map(weaponCategoryEntities)
                return weaponCategoryDtos
            return weaponCategoryDtos
        return status code 200 \n weaponCategoryDtos
    return success
    Employee -> AddWeaponModelForm: insert data and confirm
            AddWeaponModelForm -> WeaponModelEndpoint: addWeaponModel(weaponModelDto)
                WeaponModelEndpoint -> WeaponCategoryEntity *: <<create>>
                WeaponModelEndpoint -> AddWeaponModelDto: convertToEntity(weaponCategoryEntity)
                return weaponModelEntity
                WeaponModelEndpoint -> WeaponModelManager: addWeaponModel(weaponModelEntity)
                    group RW, read committed
                        WeaponModelManager -> WeaponModelFacade: findByName(weaponModelEntity.getName())
                        return empty optional
                        WeaponModelManager -> WeaponCategoryFacade: findByName(weaponModelEntity.getWeaponCategory().getName())
                        return optional with weaponCategory
                        WeaponModelManager -> WeaponModelEntity: setWeaponCategory(weaponCategory)
                        return success
                        WeaponModelManager -> WeaponModelFacade: create(weaponModel)
                        return success
                    end
                return success
            return status code 200
    return 'success' message

else weapon model with such name exists
autonumber
    Employee -> AddWeaponModelForm: 'add' button clicked
        AddWeaponModelForm -> WeaponCategoryEndpoint: getAllWeaponCategories()
            WeaponCategoryEndpoint -> WeaponCategoryManager: getAllWeaponCategories()
                group RO, read committed
                    WeaponCategoryManager -> WeaponCategoryFacade: findAll()
                    return weaponCategoryEntities
                end
                WeaponCategoryEndpoint -> WeaponCategoryEndpoint: map(weaponCategoryEntities)
                return weaponCategoryDtos
            return weaponCategoryDtos
        return status code 200 \n weaponCategoryDtos
    return success
    Employee -> AddWeaponModelForm: insert data and confirm
        AddWeaponModelForm -> WeaponModelEndpoint: addWeaponModel(weaponModelDto)
            WeaponModelEndpoint -> WeaponCategoryEntity *: <<create>>
            WeaponModelEndpoint -> AddWeaponModelDto: convertToEntity(weaponCategoryEntity)
            return weaponModelEntity
            WeaponModelEndpoint -> WeaponModelManager: addWeaponModel(weaponModelEntity)
                group RW, read committed
                    WeaponModelManager -> WeaponModelFacade: findByName(weaponModelEntity.getName())
                    return optional with weaponModel
                end
            return weapon model with such name exists
         return status code 400
    return 'failed' message

else weapon category does not exist
autonumber
    Employee -> AddWeaponModelForm: 'add' button clicked
        AddWeaponModelForm -> WeaponCategoryEndpoint: getAllWeaponCategories()
            WeaponCategoryEndpoint -> WeaponCategoryManager: getAllWeaponCategories()
                group RO, read committed
                    WeaponCategoryManager -> WeaponCategoryFacade: findAll()
                    return weaponCategoryEntities
                end
                WeaponCategoryEndpoint -> WeaponCategoryEndpoint: map(weaponCategoryEntities)
                return weaponCategoryDtos
            return weaponCategoryDtos
        return status code 200 \n weaponCategoryDtos
    return success
    Employee -> AddWeaponModelForm: insert data and confirm
        AddWeaponModelForm -> WeaponModelEndpoint: addWeaponModel(weaponModelDto)
            WeaponModelEndpoint -> WeaponCategoryEntity *: <<create>>
            WeaponModelEndpoint -> AddWeaponModelDto: convertToEntity(weaponCategoryEntity)
            return weaponModelEntity
            WeaponModelEndpoint -> WeaponModelManager: addWeaponModel(weaponModelEntity)
                group RW, read committed
                    WeaponModelManager -> WeaponModelFacade: findByName(weaponModelEntity.getName())
                    return empty optional
                    WeaponModelManager -> WeaponCategoryFacade: findByName(weaponModelEntity.getWeaponCategory().getName())
                    return empty optional
                end
            return weapon category does not exist
        return status code 400
    return 'failed' message

else no weapon categories
autonumber
    Employee -> AddWeaponModelForm: 'add' button clicked
        AddWeaponModelForm -> WeaponCategoryEndpoint: getAllWeaponCategories()
            WeaponCategoryEndpoint -> WeaponCategoryManager: getAllWeaponCategories()
                group RO, read committed
                    WeaponCategoryManager -> WeaponCategoryFacade: findAll()
                    return empty list
                end
            return no weapon categories
        return status code 400
    return show 'no weapon categories' message

else invalid form data
autonumber
    Employee -> AddWeaponModelForm: 'add' button clicked
        AddWeaponModelForm -> WeaponCategoryEndpoint: getAllWeaponCategories()
            WeaponCategoryEndpoint -> WeaponCategoryManager: getAllWeaponCategories()
                group RO, read committed
                    WeaponCategoryManager -> WeaponCategoryFacade: findAll()
                    return weaponCategoryEntities
                end
                WeaponCategoryEndpoint -> WeaponCategoryEndpoint: map(weaponCategoryEntities)
                return weaponCategoryDtos
            return weaponCategoryDtos
        return status code 200 \n weaponCategoryDtos
    return success
    Employee -> AddWeaponModelForm: insert data and confirm
        AddWeaponModelForm -> WeaponModelEndpoint: addWeaponModel(weaponModelDto)
        return status code 400 \n invalid form data
    return 'failed' message

end
@enduml
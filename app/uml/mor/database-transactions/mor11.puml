@startuml
title MOR.11: Usuń opinię na temat modelu broni

autoactivate on
actor Customer
boundary AllOpinionsView as GUI
participant OpinionEndpoint
participant OpinionManager
participant SecurityContext
control OpinionFacadeReadCommitted as OpinionFacade
control WeaponModelFacadeReadCommitted as WeaponModelFacade
entity OpinionEntity
entity WeaponModelEntity
entity CustomerEntity
entity AccountEntity
alt opinion exists
autonumber
    Customer -> GUI: button 'delete' clicked
            GUI -> OpinionEndpoint: removeOpinion(opinionNumber)
                OpinionEndpoint -> OpinionManager: removeOpinion(opinionNumber)
                    group RW, read committed
                        OpinionManager -> OpinionFacade: findByOpinionNumber(opinionNumber)
                        return optional with opinion
                        OpinionManager -> OpinionEntity: getWeaponModel()
                        return weaponModel for opinion
                        OpinionManager -> WeaponModelEntity: isActive()
                        return true
                        OpinionManager -> OpinionEntity: getCustomer()
                        return customer
                        OpinionManager -> CustomerEntity: getAccount()
                        return account
                        OpinionManager -> SecurityContext: getCallerPrincipal()
                        return principal
                        OpinionManager -> AccountEntity: getLogin()
                        return the same customer login
                        OpinionManager -> OpinionFacade: remove(opinionEntity)
                        return success
                        OpinionManager -> WeaponModelEntity: getOpinions().remove(opinionEntity)
                        return success
                        OpinionManager -> WeaponModelEntity: getOpinions().stream().mapToDouble(OpinionEntity::getRate).average()
                        return average - optional with average rate as Double
                        alt average.isPresent() == true
                        OpinionManager -> WeaponModelEntity: setAverageRate(average.getAsDouble())
                        return success
                        else average.isPresent() == false
                        OpinionManager -> WeaponModelEntity: setAverageRate(null)
                        return success
                        end
                        OpinionManager -> WeaponModelFacade: edit(weaponModelEntity)
                        return success
                    end
                return success
            return status code 200
        return success message
else opinion does not exist
autonumber
Customer -> GUI: button 'delete' clicked
    GUI -> OpinionEndpoint: removeOpinion(opinionNumber)
        OpinionEndpoint -> OpinionManager: removeOpinion(opinionNumber)
            group RW, read committed
                OpinionManager -> OpinionFacade: findByOpinionNumber (opinionNumber)
                return empty optional
            end
        return opinion does not exist
    return status code 400
return error message
else attempt to delete another customer's opinion
autonumber
    Customer -> GUI: button 'delete' clicked
        GUI -> OpinionEndpoint: removeOpinion(opinionNumber)
            OpinionEndpoint -> OpinionManager: removeOpinion(opinion)
            group RW, read committed
                OpinionManager -> OpinionFacade: findByOpinionNumber (opinionNumber)
                return empty optional
                OpinionManager -> OpinionEntity: getWeaponModel()
                return weaponModel for opinion
                OpinionManager -> WeaponModelEntity: isActive()
                return true
                OpinionManager -> OpinionEntity: getCustomer()
                return customer
                OpinionManager -> CustomerEntity: getAccount()
                return account
                OpinionManager -> SecurityContext: getCallerPrincipal()
                return principal
                OpinionManager -> AccountEntity: getLogin()
                return another customer's login
            end
            return failed - attempt to delete another customer's opinion
        return status code 400
    return error message
    else weaponModel has been removed (is inactive)
    autonumber
        Customer -> GUI: button 'delete' clicked
            GUI -> OpinionEndpoint: removeOpinion(opinionNumber)
                OpinionEndpoint -> OpinionManager: removeOpinion(opinion)
                group RW, read committed
                    OpinionManager -> OpinionFacade: findByOpinionNumber (opinionNumber)
                    return empty optional
                    OpinionManager -> OpinionEntity: getWeaponModel()
                    return weaponModel for opinion
                    OpinionManager -> WeaponModelEntity: isActive()
                    return false
                end
                return failed - weapon model does not exist
            return status code 400
        return error message
end
@enduml
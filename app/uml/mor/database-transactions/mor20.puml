@startuml
title MOR.20: UsuÅ„ model broni

autoactivate on
actor Employee
boundary AllWeaponModelsList as GUI
participant WeaponModelEndpoint
participant WeaponModelManager
control WeaponModelFacadeSerializable as WeaponModelFacade
entity WeaponModelEntity
entity WeaponEntity
alt weapon model is active
autonumber
    Employee -> GUI: button 'delete' clicked
            GUI -> WeaponModelEndpoint: removeWeaponModel (weaponModelName)
                WeaponModelEndpoint -> WeaponModelManager: removeWeaponModel (weaponModelName)
                    group RW, serializable
                        WeaponModelManager -> WeaponModelFacade: findByName(weaponModelName)
                        return optional with weapon model
                        WeaponModelManager -> WeaponModelEntity: isActive()
                        return true
                        WeaponModelManager -> WeaponModelEntity: setActive(false)
                        return success
                        WeaponModelManager -> WeaponModelEntity: getWeapons()
                        return list of weapons of weapon model
                        group loop [weapon in weapons extracted from weapon model]
                            WeaponModelManager -> WeaponEntity: isActive()
                            return if_active
                            opt if_active == true
                                WeaponModelManager -> WeaponEntity: getReservations()
                                return list without active reservations
                                WeaponModelManager -> WeaponEntity: setActive(false)
                                return success
                            end
                        end
                        WeaponModelManager -> WeaponModelFacade: edit(weaponModel)
                        return success
                    end
                return success
            return status code 200
        return success confirmation
else weapon model is booked in future reservations
autonumber
Employee -> GUI: button 'delete' clicked
    GUI -> WeaponModelEndpoint: removeWeaponModel (weaponModelName)
        WeaponModelEndpoint -> WeaponModelManager: removeWeaponModel (weaponModelName)
            group RW, serializable
                WeaponModelManager -> WeaponModelFacade: findByName(weaponModelName)
                return optional with weapon model
                WeaponModelManager -> WeaponModelEntity: isActive()
                return true
                WeaponModelManager -> WeaponModelEntity: setActive(false)
                return success
                WeaponModelManager -> WeaponModelEntity: getWeapons()
                return list of weapons of weapon model
                group loop [weapon in weapons extracted from weapon model]
                    WeaponModelManager -> WeaponEntity: isActive()
                    return if_active
                    opt if_active == true
                        WeaponModelManager -> WeaponEntity: setActive(false)
                        return success
                        WeaponModelManager -> WeaponEntity: getReservations()
                        return list with active reservations
                    end
                end
            end
        return failure - attempt to remove weapon model with active reservations
    return status code 400
return error message

else weapon model is deactivated
autonumber
Employee -> GUI: button 'delete' clicked
    GUI -> WeaponModelEndpoint: removeWeaponModel (weaponModelName)
            WeaponModelEndpoint -> WeaponModelManager: removeWeaponModel (weaponModelName)
                group RW, serializable
                    WeaponModelManager -> WeaponModelFacade: findByName(weaponModelName)
                    return optional with weapon model
                    WeaponModelManager -> WeaponModelEntity: isActive()
                    return false
                end
            return weapon model already deactivated
    return status code 400
return weapon model already deactivated message
else weapon model does not exist
autonumber
Employee -> GUI: button 'delete' clicked
    GUI -> WeaponModelEndpoint: removeWeaponModel (weaponModelName)
            WeaponModelEndpoint -> WeaponModelManager: removeWeaponModel (weaponModelName)
                group RW, serializable
                    WeaponModelManager -> WeaponModelFacade: findByName(weaponModelName)
                    return empty optional
                end
            return weapon model does not exist
    return status code 400
return error message
end
@enduml
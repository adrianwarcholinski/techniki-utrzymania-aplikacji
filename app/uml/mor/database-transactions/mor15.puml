@startuml
title MOR.15 UsuÅ„ tor
autoactivate on
actor Employee
boundary AlleyList
participant AlleyEndpoint
participant AlleyManager
participant ReservationUtils
control AlleyFacadeSerializable as AlleyFacade
entity AlleyEntity
alt alley exists
autonumber
    Employee -> AlleyList: "Delete" button clicked and confirmed
        AlleyList -> AlleyEndpoint: removeAlley(alleyName)
                AlleyEndpoint -> AlleyManager: removeAlley(alleyName)
                group RW, serializable
                    AlleyManager -> AlleyFacade: findByName(alleyName)
                    return optional with alley
                    AlleyManager -> AlleyEntity: isActive()
                    return true
                    AlleyManager -> AlleyEntity: getReservations()
                    return list of reservations for alley
                    loop reservation in reservations
                        AlleyManager -> ReservationUtils: checkIsActiveReservation(reservation)
                        return false
                    end
                    AlleyManager -> AlleyEntity: setActive(false)
                    return success
                    AlleyManager -> AlleyFacade: edit(alleyEntity)
                    return success
                    end
                 return success
        return status code 200
     return "alley deleted" message
else alley doesn't exist
autonumber
    Employee -> AlleyList: "Delete" button clicked and confirmed
        AlleyList -> AlleyEndpoint: removeAlley(alleyName)
                AlleyEndpoint -> AlleyManager: removeAlley(alleyName)
                group RW, serializable
                    AlleyManager -> AlleyFacade: findByName(alleyName)
                    return empty optional
                    end
                 return alley does not exist
        return status code 400
     return "alley doesn't exist" message
else alley is already deactivated
autonumber
Employee -> AlleyList: "Delete" button clicked and confirmed
        AlleyList -> AlleyEndpoint: removeAlley(alleyName)
                AlleyEndpoint -> AlleyManager: removeAlley(alleyName)
                group RW, serializable
                    AlleyManager -> AlleyFacade: findByName(alleyName)
                    return optional with alley
                    AlleyManager -> AlleyEntity: isActive()
                    return false
                    end
                 return alley is already deactivated
        return status code 400
     return "alley is already deactivated" message
else attempt to remove alley with active reservations
autonumber
 Employee -> AlleyList: "Delete" button clicked and confirmed
        AlleyList -> AlleyEndpoint: removeAlley(alleyName)
                AlleyEndpoint -> AlleyManager: removeAlley(alleyName)
                group RW, serializable
                    AlleyManager -> AlleyFacade: findByName(alleyName)
                    return optional with alley
                    AlleyManager -> AlleyEntity: isActive()
                    return true
                    AlleyManager -> AlleyEntity: getReservations()
                    return list of reservations for alley
                    loop reservation in reservations
                        AlleyManager -> ReservationUtils: checkIsActiveReservation(reservation)
                        return true
                    end
                    end
                 return attempt to remove alley with active reservations
        return status code 400
     return "attempt to remove alley with active reservations" message
end
@enduml
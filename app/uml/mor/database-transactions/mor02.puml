@startuml
title MOR.2 OdwoÅ‚aj rezerwacjÄ™
autoactivate on
actor "Employee" as User
boundary ReservationListForm
participant ReservationEndpoint
participant ReservationManager
participant EmailSender
control ReservationFacadeReadCommitted as ReservationFacade
entity ReservationEntity
entity CustomerEntity
entity AccountEntity



alt reservation canceled properly
autonumber
    User -> ReservationListForm: 'cancel' and 'confirm' button clicked
        ReservationListForm -> ReservationEndpoint: cancelReservation(reservationNumber, language)
                ReservationEndpoint -> ReservationManager: cancelReservation(reservationNumber, finalLanguage)
                    group RW, read committed
                    ReservationManager -> ReservationFacade: findByReservationNumber(reservationNumber)
                    return optional with reservation
                    ReservationManager -> ReservationManager: cancelReservation(reservation)
                        ReservationManager -> ReservationEntity: getEndDate()
                        return future date
                        ReservationManager -> ReservationEntity: getStartDate()
                        return future date
                        ReservationManager -> ReservationEntity: isActive()
                        return true
                        ReservationManager -> ReservationEntity: setActive(false)
                        return success
                        ReservationManager -> ReservationFacade: edit(reservation)
                        return success
                    return success
                    ReservationManager -> ReservationEntity: getCustomer()
                    return customer
                    ReservationManager -> CustomerEntity: getAccount()
                    return account
                    ReservationManager -> AccountEntity: getEmail()
                    return destinationEmail
                    ReservationManager -> AccountEntity: getReservationNumber()
                    return reservationNumber
                    ReservationManager -> EmailCreator: getCancelReservationEmail(finalLanguage, destinationEmail, reservationNumber)
                    return cancelReservationEmail
                    ReservationManager -> EmailSender: sendEmail(cancelReservationEmail)
                    return success
                    end
                return success
        return status code 200
    return success confirmation
else reservation does not exist
autonumber
    User -> ReservationListForm: 'cancel' and 'confirm' button clicked
        ReservationListForm -> ReservationEndpoint: cancelReservation(reservationNumber, language)
                ReservationEndpoint -> ReservationManager: cancelReservation(reservationNumber, finalLanguage)
                    group RW, read committed
                    ReservationManager -> ReservationFacade: findByReservationNumber(reservationNumber)
                    return empty optional
                    end
                return failed
        return status code 400
    return failure message
else reservation was finished in the past
autonumber
    User -> ReservationListForm: 'cancel' and 'confirm' button clicked
        ReservationListForm -> ReservationEndpoint: cancelReservation(reservationNumber, language)
                ReservationEndpoint -> ReservationManager: cancelReservation(reservationNumber, finalLanguage)
                    group RW, read committed
                    ReservationManager -> ReservationFacade: findByReservationNumber(reservationNumber)
                    return optional with reservation
                    ReservationManager -> ReservationManager: cancelReservation(reservation)
                        ReservationManager -> ReservationEntity: getEndDate()
                        return past date
                    return failed
                    end
                return failed
        return status code 400
    return failure message
else reservation is in progress
autonumber
    User -> ReservationListForm: 'cancel' and 'confirm' button clicked
        ReservationListForm -> ReservationEndpoint: cancelReservation(reservationNumber, language)
                ReservationEndpoint -> ReservationManager: cancelReservation(reservationNumber, finalLanguage)
                    group RW, read committed
                    ReservationManager -> ReservationFacade: findByReservationNumber(reservationNumber)
                    return optional with reservation
                    ReservationManager -> ReservationManager: cancelReservation(reservation)
                        ReservationManager -> ReservationEntity: getEndDate()
                        return future date
                        ReservationManager -> ReservationEntity: getStartDate()
                        return past date
                    return failed
                    end
                return failed
        return status code 400
    return failure message
else reservation is canceled
autonumber
    User -> ReservationListForm: 'cancel' and 'confirm' button clicked
        ReservationListForm -> ReservationEndpoint: cancelReservation(reservationNumber, language)
                ReservationEndpoint -> ReservationManager: cancelReservation(reservationNumber, finalLanguage)
                    group RW, read committed
                    ReservationManager -> ReservationFacade: findByReservationNumber(reservationNumber)
                    return optional with reservation
                    ReservationManager -> ReservationManager: cancelReservation(reservation)
                        ReservationManager -> ReservationEntity: getEndDate()
                        return future date
                        ReservationManager -> ReservationEntity: getStartDate()
                        return future date
                        ReservationManager -> ReservationEntity: isActive()
                        return false
                    return failed
                    end
                return failed
        return status code 400
    return failure message
else email sending error
autonumber
    User -> ReservationListForm: 'cancel' and 'confirm' button clicked
        ReservationListForm -> ReservationEndpoint: cancelReservation(reservationNumber, language)
                ReservationEndpoint -> ReservationManager: cancelReservation(reservationNumber, finalLanguage)
                    group RW, read committed
                    ReservationManager -> ReservationFacade: findByReservationNumber(reservationNumber)
                    return optional with reservation
                    ReservationManager -> ReservationManager: cancelReservation(reservation)
                        ReservationManager -> ReservationEntity: getEndDate()
                        return future date
                        ReservationManager -> ReservationEntity: getStartDate()
                        return future date
                        ReservationManager -> ReservationEntity: isActive()
                        return true
                        ReservationManager -> ReservationEntity: setActive(false)
                        return success
                        ReservationManager -> ReservationFacade: edit(reservation)
                        return success
                    return success
                    ReservationManager -> ReservationEntity: getCustomer()
                    return customer
                    ReservationManager -> CustomerEntity: getAccount()
                    return account
                    ReservationManager -> AccountEntity: getEmail()
                    return destinationEmail
                    ReservationManager -> AccountEntity: getReservationNumber()
                    return reservationNumber
                    ReservationManager -> EmailCreator: getCancelReservationEmail(finalLanguage, destinationEmail, reservationNumber)
                    return cancelReservationEmail
                    ReservationManager -> EmailSender: sendEmail(cancelReservationEmail)
                    return failed
                    end
                return failed
        return status code 400
    return failure message
end


@enduml
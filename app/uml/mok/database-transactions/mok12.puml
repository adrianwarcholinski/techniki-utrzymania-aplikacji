@startuml
autoactivate on
title MOK.12 Zmień hasło konta innego użytkownika
actor Admin
boundary AccountDetailsView as GUI
participant AccountEndpoint
participant AccountManager
participant HashGenerator
participant PasswordHash
control AccountFacade
entity AccountEntity

alt account exists and password meet the requirements
autonumber
Admin -> GUI: 'submit' button clicked and confirmed
    GUI -> AccountEndpoint: changePassword(login, newPassword)

            AccountEndpoint -> AccountManager: changePassword(login, newPassword)
                group RW, read committed
                AccountManager -> AccountFacade: findByLogin(login)
                return optional with account
                AccountManager -> HashGenerator: generatePasswordHash(newPassword)
                    HashGenerator -> PasswordHash: generatePasswordHash
                    return newPasswordHash
                return newPasswordHash
                AccountManager -> AccountEntity: setPassword(newPasswordHash)
                return success
                AccountManager -> AccountFacade: edit(accountEntity)
                return success
                end
            return success

    return status code 200
return 'success' message
else new password does not meet the requirements
autonumber
Admin -> GUI: confirmation of update
    GUI -> AccountEndpoint: changePassword(login, newPassword)
    return status code 400,\ninvalid input
return error message
else account does not exist
autonumber
 Admin -> GUI: confirmation of update
    GUI -> AccountEndpoint: changePassword(login, newPassword)
            AccountEndpoint -> AccountManager: changePassword(login, newPassword)
                group RW, read committed
                    AccountManager -> AccountFacade: findByLogin(login)
                    return empty optional
                end
            return account does not exist
    return status code 400,\naccount does not exist
 return error message
end
@enduml
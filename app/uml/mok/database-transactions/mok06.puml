@startuml

title
MOK.6 Odblokuj konto
end title

autoactivate on
actor Administrator
boundary AccountsList
participant AccountEndpoint
participant SendingEmailEndpoint
participant AccountManager
control AccountFacadeReadCommitted
entity AccountEntity
alt account exists
autonumber
    Administrator -> AccountsList: button 'unlock' clicked
        activate AccountsList
        AccountsList -> AccountEndpoint: unlockAccount(login)
                AccountEndpoint -> AccountManager: unlockAccount(login)
                    group RW, read committed
                    AccountManager -> AccountFacadeReadCommitted: findByLogin(login)
                    return optional with account
                    AccountManager -> AccountEntity: isVerified()
                    return true
                    AccountManager -> AccountEntity: isActive()
                    return false
                    AccountManager -> AccountEntity: setActive(true)
                    return success
                    AccountManager -> AccountFacadeReadCommitted: edit(account)
                    return optional with account
                    end
                return success
        return status code 200
    return 'success' message
    AccountsList -> SendingEmailEndpoint: activityChangedNotification(language, isBlocking=false, email)
            SendingEmailEndpoint -> AccountManager: isVerifiedAccountWithEmail(email)
                group RO, read committed
                AccountManager -> AccountFacadeReadCommitted: findByEmail(email)
                return optional with account
                AccountManager -> AccountEntity: isVerified()
                return true
                end
            return true
            SendingEmailEndpoint -> EmailCreator: getUnlockAccountEmail(language, email)
            return Email (with notification about unlock account)
            SendingEmailEndpoint -> EmailSender: sendEmail(Email)
            return
    return status code 200
    deactivate AccountsList
else account does not exist
autonumber
     Administrator -> AccountsList: button 'unlock' clicked
        AccountsList -> AccountEndpoint: unlockAccount(login)
                AccountEndpoint -> AccountManager: unlockAccount(login)
                    group RW, read committed
                    AccountManager -> AccountFacadeReadCommitted: findByLogin(login)
                    return empty optional
                    end
                return account does not exist
        return status code 400
     return error message
 else account is not verified
 autonumber
      Administrator -> AccountsList: 'lock' button clicked
          AccountsList -> AccountEndpoint: lockAccount(login)
              AccountEndpoint -> AccountManager: lockAccount(login)
                  group RW, read committed
                      AccountManager -> AccountFacadeReadCommitted: findByLogin(login)
                      return optional with account
                      AccountManager -> AccountEntity: isVerified()
                      return false
                  end
              return account is already locked
          return status code 400
      return 'error' message
else account is already unlocked
autonumber
     Administrator -> AccountsList: button 'unlock' clicked
         AccountsList -> AccountEndpoint: unlockAccount(login)
                 AccountEndpoint -> AccountManager: unlockAccount(login)
                     group RW, read committed
                     AccountManager -> AccountFacadeReadCommitted: findByLogin(login)
                     return optional with account
                     AccountManager -> AccountEntity: isActive()
                     return true
                     end
                 return account is already unlocked
         return status code 400
     return error message
end
@enduml
@startuml

title MOK.09 Edytuj szczegóły swojego konta

autoactivate on
participant AccountEndpoint
participant "AccountManager\nTransactionAttribute.REQUIRES_NEW" as AccountManager
control "AccountFacadeReadCommitted\nTransactionAttribute.MANDATORY" as AccountFacade
control "AdminFacadeReadCommitted\nTransactionAttribute.MANDATORY" as AdminFacade
control "CustomerFacadeReadCommitted\nTransactionAttribute.MANDATORY" as CustomerFacade
control "EmployeeFacadeReadCommitted\nTransactionAttribute.MANDATORY" as EmployeeFacade
entity AccountEntity
entity AdminEntity
entity CustomerEntity
entity EmployeeEntity
entity AccessLevelEntity

alt account details edited properly
autonumber
                AccountEndpoint -> AccountManager: getAccountDetails(login)
                        AccountManager -> AccountFacade: findByLogin(login)
                        return optional with account
                return account

                note right AccountEndpoint
                    [...]
                end note

                AccountEndpoint -> AccountManager: editUserDetails(accountEntity, adminEntity, employeeEntity, customerEntity)
                        AccountManager -> AccountEntity: getId()
                        return accountId
                        AccountManager -> AccountFacade: find(accountId)
                        return optional with account
                        AccountManager -> AccountEntity: copyNotChangedDataAccount(account, accountEntity)
                        return success

                        AccountManager -> AdminEntity: getCardNumber()
                        return cardNumber
                            AccountManager -> AdminFacade: findByCardNumber(cardNumber)
                            return optional with ownerAdminEntity
                        AccountManager -> AccountEntity: getLogin()
                        return editedAccountLogin
                        AccountManager -> AccountManager: checkUniqueCardNumber(ownerAdminEntity, editedAccountLogin)
                        return true

                        AccountManager -> CustomerEntity: getPhoneNumber()
                        return phoneNumber
                            AccountManager -> CustomerFacade: findByPhoneNumber(phoneNumber)
                            return optional with ownerCustomerEntity
                        AccountManager -> CustomerEntity: getLogin()
                        return editedAccountLogin
                        AccountManager -> AccountManager: checkUniquePhoneNumber(ownerCustomerEntity, editedAccountLogin)
                        return true

                        AccountManager -> EmployeeEntity: getCardNumber()
                        return workPhoneNumber
                            AccountManager -> EmployeeFacade: findByWorkPhoneNumber(workPhoneNumber)
                            return optional with ownerEmployeeEntity
                        AccountManager -> EmployeeEntity: getLogin()
                        return editedAccountLogin
                        AccountManager -> AccountManager: checkUniqueWorkPhoneNumber(ownerEmployeeEntity, editedAccountLogin)
                        return true


                            AccountManager -> AccountFacade: edit(accountEntity)
                            return success
                        AccountManager -> AccountEntity: getAccessLevels()
                        return accountAccessLevels
                        loop ent in accountAccessLevels
                            opt
                                AccountManager -> AccessLevelEntity: copyNotChangedDataAccessLevel(ent, adminEntity)
                                return success
                                    AccountManager -> AdminFacade: edit(adminEntity)
                                    return success
                            else
                                AccountManager -> AccessLevelEntity: copyNotChangedDataAccessLevel(ent, employeeEntity)
                                return success
                                    AccountManager -> CustomerFacade: edit(employeeEntity)
                                    return success
                            else
                                AccountManager -> AccessLevelEntity: copyNotChangedDataAccessLevel(ent, customerEntity)
                                return success
                                    AccountManager -> EmployeeFacade: edit(customerEntity)
                                    return success
                            end
                        end
                return success
else invalid form input
autonumber
                AccountEndpoint -> AccountManager: getAccountDetails(login)
                        AccountManager -> AccountFacade: findByLogin(login)
                        return optional with account
                return account
else invalid card number
autonumber
                AccountEndpoint -> AccountManager: getAccountDetails(login)
                        AccountManager -> AccountFacade: findByLogin(login)
                        return optional with account
                return account

                note right AccountEndpoint
                    [...]
                end note

                AccountEndpoint -> AccountManager: editUserDetails(accountEntity, adminEntity, employeeEntity, customerEntity)
                        AccountManager -> AccountEntity: getId()
                        return accountId
                        AccountManager -> AccountFacade: find(accountId)
                        return optional with account
                        AccountManager -> AccountEntity: copyNotChangedDataAccount(account, accountEntity)
                        return success
                    AccountManager -> AdminEntity: getCardNumber()
                    return cardNumber
                        AccountManager -> AdminFacade: findByCardNumber(cardNumber)
                        return optional with ownerAdminEntity
                    AccountManager -> AccountEntity: getLogin()
                    return editedAccountLogin
                    AccountManager -> AccountManager: checkUniqueCardNumber(ownerAdminEntity, editedAccountLogin)
                    return false
                return failed
else invalid phone number
autonumber
                AccountEndpoint -> AccountManager: getAccountDetails(login)
                        AccountManager -> AccountFacade: findByLogin(login)
                        return optional with account
                return account

                note right AccountEndpoint
                    [...]
                end note

                AccountEndpoint -> AccountManager: editUserDetails(accountEntity, adminEntity, employeeEntity, customerEntity)
                        AccountManager -> AccountEntity: getId()
                        return accountId
                        AccountManager -> AccountFacade: find(accountId)
                        return optional with account
                        AccountManager -> AccountEntity: copyNotChangedDataAccount(account, accountEntity)
                        return success
                    AccountManager -> AdminEntity: getCardNumber()
                    return cardNumber
                        AccountManager -> AdminFacade: findByCardNumber(cardNumber)
                        return optional with ownerAdminEntity
                    AccountManager -> AccountEntity: getLogin()
                    return editedAccountLogin
                    AccountManager -> AccountManager: checkUniqueCardNumber(ownerAdminEntity, editedAccountLogin)
                    return true

                    AccountManager -> CustomerEntity: getPhoneNumber()
                    return phoneNumber
                        AccountManager -> CustomerFacade: findByPhoneNumber(phoneNumber)
                        return optional with ownerCustomerEntity
                    AccountManager -> CustomerEntity: getLogin()
                    return editedAccountLogin
                    AccountManager -> AccountManager: checkUniquePhoneNumber(ownerCustomerEntity, editedAccountLogin)
                    return false
                return failed
else invalid work phone number
autonumber
                AccountEndpoint -> AccountManager: getAccountDetails(login)
                        AccountManager -> AccountFacade: findByLogin(login)
                        return optional with account
                return account

                note right AccountEndpoint
                    [...]
                end note

                AccountEndpoint -> AccountManager: editUserDetails(accountEntity, adminEntity, employeeEntity, customerEntity)
                        AccountManager -> AccountEntity: getId()
                        return accountId
                        AccountManager -> AccountFacade: find(accountId)
                        return optional with account
                        AccountManager -> AccountEntity: copyNotChangedDataAccount(account, accountEntity)
                        return success
                    AccountManager -> AdminEntity: getCardNumber()
                    return cardNumber
                        AccountManager -> AdminFacade: findByCardNumber(cardNumber)
                        return optional with ownerAdminEntity
                    AccountManager -> AccountEntity: getLogin()
                    return editedAccountLogin
                    AccountManager -> AccountManager: checkUniqueCardNumber(ownerAdminEntity, editedAccountLogin)
                    return true

                    AccountManager -> CustomerEntity: getPhoneNumber()
                    return phoneNumber
                        AccountManager -> CustomerFacade: findByPhoneNumber(phoneNumber)
                        return optional with ownerCustomerEntity
                    AccountManager -> CustomerEntity: getLogin()
                    return editedAccountLogin
                    AccountManager -> AccountManager: checkUniquePhoneNumber(ownerCustomerEntity, editedAccountLogin)
                    return true

                    AccountManager -> EmployeeEntity: getCardNumber()
                    return workPhoneNumber
                        AccountManager -> EmployeeFacade: findByWorkPhoneNumber(workPhoneNumber)
                        return optional with ownerEmployeeEntity
                    AccountManager -> EmployeeEntity: getLogin()
                    return editedAccountLogin
                    AccountManager -> AccountManager: checkUniqueWorkPhoneNumber(ownerEmployeeEntity, editedAccountLogin)
                    return false
                return failed
else account does not exist
autonumber
                AccountEndpoint -> AccountManager: getAccountDetails(login)
                        AccountManager -> AccountFacade: findByLogin(login)
                        return optional with account
                return account

                note right AccountEndpoint
                    [...]
                end note

                AccountEndpoint -> AccountManager: editUserDetails(accountEntity, adminEntity, employeeEntity, customerEntity)
                        AccountManager -> AccountEntity: getId()
                        return accountId
                        AccountManager -> AccountFacade: find(accountId)
                        return empty optional
                return failed
end

@enduml